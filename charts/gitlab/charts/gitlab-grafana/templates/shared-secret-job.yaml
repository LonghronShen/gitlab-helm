{{- if .Values.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "gitlab-grafana.jobname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "gitlab.standardLabels" . | indent 4 }}
{{- if not .Values.global.operator.enabled }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
{{- end }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- if .Values.rbac.create }}
      serviceAccountName: {{ template "gitlab-grafana.serviceAccountName" . }}
      {{- end }}
      restartPolicy: Never
{{- include "pullsecrets" .Values.global.kubectl.image | indent 6}}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "gitlab.kubectl.image" . | quote }}
          command: ['/bin/bash', '/scripts/generate-secret.sh']
          {{ template "gitlab.imagePullPolicy" . }}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: scripts
        configMap:
          name: {{ .Release.Name }}-grafana-generate-secret
{{- end }}