{{- if .Values.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels:
{{ include "gitlab.standardLabels" . | indent 4 }}
data:
  database.yml.erb: |
    production:
      adapter: postgresql
      encoding: unicode
      database: {{ template "gitlab.psql.database" . }}
      pool: 10
      username: {{ template "gitlab.psql.username" . }}
      password: <%= File.read("/etc/gitlab/postgres/psql-password") %>
      host: {{ template "gitlab.psql.host" . }}
      port: {{ template "gitlab.psql.port" . }}
  resque.yml.erb: |
    production:
      # Redis (single instance)
      url: {{ template "gitlab.redis.scheme" . }}://:<%= File.read("/etc/gitlab/redis/password") %>@{{ template "gitlab.redis.host" . }}:{{ template "gitlab.redis.port" . }}
  gitlab.yml.erb: |
    production: &base
      gitlab:
        host: {{ template "gitlab.gitlab.hostname" . }}
        https: {{ hasPrefix "https://" (include "gitlab.gitlab.url" .) }}
        {{- with .Values.global.hosts.ssh }}
        ssh_host: {{ . | quote }}
        {{- end }}
        {{- with .Values.global.appConfig }}
        impersonation_enabled: {{ .enableImpersonation }}
        usage_ping_enabled: {{ eq .enableUsagePing true }}
        default_can_create_group: {{ eq .defaultCanCreateGroup true }}
        username_changing_enabled: {{ eq .usernameChangingEnabled true }}
        issue_closing_pattern: {{ .issueClosingPattern | quote }}
        default_theme: {{ .defaultTheme }}
        {{- include "gitlab.appConfig.defaultProjectsFeatures.configuration" $ | nindent 8 }}
        webhook_timeout: {{ .webhookTimeout }}
        {{- end }}
        trusted_proxies:
        {{- if .Values.trusted_proxies }}
{{ toYaml .Values.trusted_proxies | indent 10 }}
        {{- end }}
        time_zone: {{ .Values.global.time_zone | quote }}
        email_from: {{ template "gitlab.email.from" . }}
        email_display_name: {{ .Values.global.email.display_name | quote }}
        email_reply_to: {{ template "gitlab.email.reply_to" . }}
        email_subject_suffix: {{ .Values.global.email.subject_suffix | quote }}
      {{- with .Values.global.appConfig }}
      {{- if eq .incomingEmail.enabled true }}
{{ include "gitlab.configYaml.incoming_email" . | indent 6 }}
      {{- end }}
      gravatar:
        plain_url: {{ .gravatar.plainUrl }}
        ssl_url: {{ .gravatar.sslUrl }}
{{ include "gitlab.configYaml.extra" . | indent 6 }}
      {{- end }}
      {{- include "gitlab.appConfig.objectStorage.configuration" (dict "name" "artifacts" "config" $.Values.global.appConfig.artifacts "context" $) | nindent 6 }}
      {{- include "gitlab.appConfig.objectStorage.configuration" (dict "name" "lfs" "config" $.Values.global.appConfig.lfs "context" $) | nindent 6 }}
      {{- include "gitlab.appConfig.objectStorage.configuration" (dict "name" "uploads" "config" $.Values.global.appConfig.uploads "context" $) | nindent 6 }}
      {{- include "gitlab.appConfig.objectStorage.configuration" (dict "name" "packages" "config" $.Values.global.appConfig.packages "context" $) | nindent 6 }}
      pages:
        enabled: false
      mattermost:
        enabled: false
      gravatar:
      gitlab_ci:
      {{- include "gitlab.appConfig.ldap.configuration" $ | nindent 6 }}
      {{- include "gitlab.appConfig.omniauth.configuration" $ | nindent 6 }}
      kerberos:
        enabled: false
      shared:
{{ include "gitlab.configYaml.gitaly" . | indent 6 }}
{{ include "gitlab.configYaml.repositories" . | indent 6 }}
      backup:
        path: "tmp/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
{{ include "gitlab.configYaml.shell" . | indent 6 }}
      workhorse:
        secret_file: /etc/gitlab/gitlab-workhorse/secret
      git:
        bin_path: /usr/bin/git
      webpack:
      monitoring:
        ip_whitelist:
          - 0.0.0.0/0
        sidekiq_exporter:
      extra:
        {{- if .Values.extra }}
{{ toYaml .Values.extra | indent 8 }}
        {{- end }}
{{ include "gitlab.configYaml.rackAttack" . | indent 6 }}
      ## Registry Integration
      {{- include "gitlab.appConfig.registry.configuration" $ | nindent 6 }}
  configure: |
    set -e
    mkdir -p /init-secrets/redis /init-secrets/shell /init-secrets/gitaly \
      /init-secrets/registry /init-secrets/postgres /init-secrets/rails-secrets
    cp /init-config/redis/password /init-secrets/redis/password
    cp /init-config/shell/.gitlab_shell_secret /init-secrets/shell/.gitlab_shell_secret
    cp /init-config/gitaly/gitaly_token /init-secrets/gitaly/gitaly_token
    cp /init-config/registry/gitlab-registry.key /init-secrets/registry/gitlab-registry.key
    cp /init-config/postgres/psql-password /init-secrets/postgres/psql-password
    cp /init-config/rails-secrets/secrets.yml /init-secrets/rails-secrets/secrets.yml

    if [ -e /init-config/objectstorage ]; then
      mkdir -p /init-secrets/objectstorage
      cp -r /init-config/objectstorage/. /init-secrets/objectstorage/
    fi
    if [ -e /init-config/minio ]; then
      mkdir -p /init-secrets/minio
      cp -r /init-config/minio/. /init-secrets/minio/
    fi

    if [ -e /init-config/omniauth ]; then
      mkdir -p /init-secrets/omniauth
      cp -r /init-config/omniauth/. /init-secrets/omniauth/
    fi

    if [ ! -f /init-secrets/objectstorage/.s3cfg ]; then
    cat <<EOF > /init-secrets/.s3cfg
    [default]
    access_key = $(cat /init-secrets/minio/accesskey)
    secret_key = $(cat /init-secrets/minio/secretkey)
    bucket_location = us-east-1
    host_base = {{ template "gitlab.minio.hostname" . }}
    host_bucket = {{ template "gitlab.minio.hostname" . }}/%(bucket)
    default_mime_type = binary/octet-stream
    enable_multipart = True
    multipart_max_chunks = 10000
    recursive = True
    recv_chunk = 65536
    send_chunk = 65536
    server_side_encryption = False
    signature_v2 = True
    socket_timeout = 300
    use_mime_magic = True
    verbosity = WARNING
    website_endpoint = {{ template "gitlab.minio.url" . }}
    EOF
    else
      mv /init-secrets/objectstorage/.s3cfg /init-secrets/.s3cfg
    fi
{{- end }}
