{{- if .Values.global.operator.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}-set-gitlab
  labels:
{{ include "gitlab.standardLabels" $ | indent 4 }}
  annotations:
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
data:
  gitlab.yaml: |
    apiVersion: gitlab.com/v1beta1
    kind: GitLab
    metadata:
      labels:
        controller-tools.k8s.io: "1.0"
        revision: "{{ .Release.Revision }}"
{{ include "gitlab.standardLabels" $ | indent 8 }}
      name: gitlab-{{ .Release.Name }}
    spec:
      version: {{ include "gitlab.operator.gitlabVersion" . | quote }}
      helmRelease: {{ .Release.Name }}
      migrationsJob:
        template:
          metadata:
            labels:
              app: {{ template "name" . }}
              release: {{ .Release.Name }}
          spec:
            securityContext:
              runAsUser: 1000
              fsGroup: 1000
            initContainers:
{{ include "gitlab.certificates.initContainer" . | indent 14 }}
              - name: configure
                command: ['sh', '/config/configure']
                image: {{ .Values.global.operator.migrations.init.image }}:{{ .Values.global.operator.migrations.init.tag }}
                volumeMounts:
                - name: migrations-config
                  mountPath: /config
                  readOnly: true
                - name: init-migrations-secrets
                  mountPath: /init-config
                  readOnly: true
                - name: migrations-secrets
                  mountPath: /init-secrets
                  readOnly: false
            restartPolicy: OnFailure
{{- include "pullsecrets" .Values.global.operator.migrations.image | indent 12}}
            containers:
              - name: {{ .Chart.Name }}
                image: "{{ .Values.global.operator.migrations.image.repository }}:{{ coalesce .Values.global.operator.migrations.image.tag (include "gitlab.versionTag" . ) }}"
                args:
                  - /scripts/wait-for-deps
                  - /scripts/db-migrate
                {{ template "gitlab.imagePullPolicy" . }}
                env:
                  - name: GITLAB_SHARED_RUNNERS_REGISTRATION_TOKEN
                    valueFrom:
                      secretKeyRef:
                        name: {{ template "gitlab.gitlab-runner.registrationToken.secret" . }}
                        key: runner-registration-token
                  - name: CONFIG_TEMPLATE_DIRECTORY
                    value: '/var/opt/gitlab/templates'
                  - name: CONFIG_DIRECTORY
                    value: '/var/opt/gitlab/config/gitlab/'
                  - name: BYPASS_SCHEMA_VERSION
                    value: 'true'
                volumeMounts:
                  - name: migrations-config
                    mountPath: '/var/opt/gitlab/templates'
                  - name: migrations-secrets
                    mountPath: '/etc/gitlab'
                    readOnly: true
                  - name: migrations-secrets
                    mountPath: /srv/gitlab/config/secrets.yml
                    subPath: rails-secrets/secrets.yml
                  - name: migrations-secrets
                    mountPath: /srv/gitlab/config/initial_root_password
                    subPath: migrations/initial_root_password
{{ include "gitlab.certificates.volumeMount" . | indent 18 }}
                resources:

{{ toYaml .Values.resources | indent 18 }}
            volumes:
            - name: migrations-config
              configMap:
                name: {{ coalesce .Values.global.operator.migrations.configMapName (include "fullnameFor" (dict "Chart" "migrations" "Context" . )) }}
            - name: init-migrations-secrets
              projected:
                defaultMode: 0400
                sources:
                - secret:
                    name: {{ template "gitlab.rails-secrets.secret" . }}
                    items:
                      - key: secrets.yml
                        path: rails-secrets/secrets.yml
                - secret:
                    name: {{ template "gitlab.redis.password.secret" . }}
                    items:
                      - key: {{ template "gitlab.redis.password.key" . }}
                        path: redis/password
                - secret:
                    name: {{ template "gitlab.psql.password.secret" . }}
                    items:
                      - key: {{ template "gitlab.psql.password.key" . }}
                        path: postgres/psql-password
                - secret:
                    name: {{ template "gitlab.migrations.initialRootPassword.secret" . }}
                    items:
                      - key: {{ template "gitlab.migrations.initialRootPassword.key" . }}
                        path: migrations/initial_root_password
            - name: migrations-secrets
              emptyDir:
                medium: "Memory"

{{ include "gitlab.certificates.volumes" . | indent 12 }}
          {{- if .Values.global.operator.migrations.nodeSelector }}
            nodeSelector:
{{ toYaml .Values.global.operator.migrations.nodeSelector | indent 14 }}
          {{- end }}
{{- end }}
